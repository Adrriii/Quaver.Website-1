{% extends "layouts/app.twig" %}
{% block content %}
    <section class="bg-image bg-dark d-flex align-items-end py-3" style="background-color: #3a3a3c !important;min-height: 320px;">
        <img class="background" src="https://cdn.quavergame.com/profile-covers/{{ user.info.id }}.jpg" onerror="this.src='/img/cover.jpg'" alt="" style="opacity: 0.25 !important;">
        <div class="container position-relative">
            <div class="row">
                <div class="col d-flex flex-column flex-lg-row align-items-center position-absolute bottom left pl-lg-8">
                    <a class="avatar-thumbnail avatar-lg d-lg-none bg-dark mb-3 mb-lg-0 border-0" href="#">
                        <img src="{{ user.info.avatar_url }}" alt="">
                    </a>
                    <h2 class="h4 text-white mb-0 ml-2 pl-lg-8">
                        <a href="#">
                            <img src="/img/flags/{{ user.info.country }}.png" alt="{{ user.info.country }}">
                        </a>
                        {{ user.info.username }}
                        <div class="status">
                            {% if user.info.online %}
                                <span class="circle online"></span>Online
                            {% else %}
                                <span class="circle offline"></span>Offline
                            {% endif %}
                        </div>
                    </h2>
                    {% if currentUser %}
                        <div class="ml-lg-auto mt-4 mb-3 my-lg-0">
                            <a class="btn btn-primary btn-sm btn-icon-left font-weight-semibold" href="#">
                                <i class="ya ya-user-add"></i>
                                Add friend
                            </a>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </section>
    <div id="sticky-wrapper" class="sticky-wrapper" style="height: 63px;">
        <section class="bg-quaver-nav border-bottom nav-profile py-0" ya-sticky="" style="">
            <div class="container">
                <div class="row">
                    <div class="col d-flex align-items-center">
                        <a class="avatar-thumbnail avatar-xl position-absolute d-none d-lg-block" href="#">
                            <img src="{{ user.info.avatar_url }}" alt="" width="188" height="188">
                        </a>
                        <div class="avatar-fixed d-none d-lg-block">
                            <a class="avatar-tile" href="#">
                                <img src="{{ user.info.avatar_url }}" alt="" width="50" height="50">
                                <div>
                                    <strong>{{ user.info.username }}</strong>
                                    <span class="d-block">
                                        {% if HasGroup(user.info, UserGroups.Developer) %}
                                            Developer
                                        {% elseif HasGroup(user.info, UserGroups.Admin) %}
                                            Administrator
                                        {% elseif HasGroup(user.info, UserGroups.Moderator) %}
                                            Moderator
                                        {% elseif HasGroup(user.info, UserGroups.RankingSupervisor) %}
                                            Ranking Supervisor
                                        {% elseif HasGroup(user.info, UserGroups.Contributor) %}
                                            Contributor
                                        {% endif %}
                                    </span>
                                </div>
                            </a>
                        </div>
                        <div class="nav-scroll">
                            <div class="nav nav-list nav-list-profile">
                                <a class="nav-item nav-link" href="#feed">Stats & Feed</a>
                                <a class="nav-item nav-link" href="#rank-judgements">Rank Progression</a>
                                <a class="nav-item nav-link" href="#scores">Scores</a>
                                <a class="nav-item nav-link" href="#rank-judgements">Judgement Breakdown</a>
                                <a class="nav-item nav-link" href="#maps">Maps</a>
                                <a class="nav-item nav-link" href="#playlists">Playlists</a>
                                <a class="nav-item nav-link" href="#achievements">Achievements</a>
                            </div>
                        </div>
                        {% if currentUser %}
                            <div class="dropdown d-none d-xl-inline-block ml-auto">
                                <button class="btn btn-quaver-dark btn-icon" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="ya ya-gear"></i>
                                </button>
                                <div class="dropdown-menu dropdown-menu-right btn-quaver-dark dropdown-quaver">
                                    <a class="dropdown-item" href="#">Change Cover</a>
                                    <a class="dropdown-item" href="#">Settings</a>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </section>
    </div>
    <section class="py-lg-4">
        <div class="container">
            {% include 'user/user-profile-info.twig' %}
            {% include 'user/user-profile-graphs.twig' %}
            {% include 'user/user-profile-scores.twig' %}
            {% include 'user/user-profile-mapsets.twig' %}
            {% include 'user/user-profile-playlists.twig' %}
            {% include 'user/user-profile-achievements.twig' %}
        </div>
    </section>
{% endblock %}

{% block style %}

{% endblock %}

{% block scripts %}
    <script src="/js/mustache.js"></script>
    <script src="/js/moment.min.js"></script>
    <script src="/js/Chart.min.js"></script>
    <script src="/js/chartjs-plugin-datalabels.js"></script>
    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/stock/modules/data.js"></script>
{% endblock %}

{% block page_scripts %}
    {% set game_mode = 'keys' ~ (mode == 1 ? '4' : '7') %}
    <script>
        // Chart.defaults.global.defaultFontStyle = '600';
        // Chart.defaults.global.defaultFontSize = '15';

        function sortData(data) {
            let marv = [], perf = [], great = [], good = [], okay = [], miss = [];
            $.each(data, function (key, value) {
                let absVal = Math.abs(value);
                if (value == -2147483648) miss.push({x: key, y: 0});
                else if (absVal <= 18) marv.push({x: key, y: value});
                else if (absVal <= 43) perf.push({x: key, y: value});
                else if (absVal <= 76) great.push({x: key, y: value});
                else if (absVal <= 106) good.push({x: key, y: value});
                else if (absVal <= 127) okay.push({x: key, y: value});
                else if (absVal <= 164) miss.push({x: key, y: value});
                else if (absVal > 0) miss.push({x: key, y: 0});
                else miss.push({x: key, y: value});
            });
            
            return [{data: marv, name: "Marvelous"}, {data: perf, name: "Perfect"}, {data: great, name: "Great"}, {data: good, name: "Good"}, {data: okay, name: "Okay"}, {data: miss, name: "Miss"}];
        }

        function loadScatter(table_class, score_id) {
            let sc = document.getElementsByClassName('scatterScore_' + table_class + '_' + score_id)[0];

            Highcharts.getJSON(`{{ apiBaseUrl }}/v1/scores/data/${score_id}`, function (data) {
                Highcharts.chart({
                    chart: {renderTo: sc, animation: false, backgroundColor: 'transparent', draggableY: false, type: "scatter"},
                    title: {text: null},
                    rangeSelector: {enabled: false},
                    navigator: {enabled: false},
                    credits: {enabled: false},
                    xAxis: {visible: false},
                    yAxis: {
                        height: 230,
                        visible: true,
                        gridLineWidth: 0,
                        labels: {enabled: true},
                        title: {text: null},
                        tickPositions: [-164, 0, 164],
                        plotBands: [
                            {
                                from: 164,
                                to: 127,
                                color: "rgba(249, 100, 93, 0.1)"
                            },
                            {
                                from: 127,
                                to: 106,
                                color: "rgba(238, 95, 172, 0.1)"
                            },
                            {
                                from: 106,
                                to: 76,
                                color: "rgba(15, 186, 229, 0.1)"
                            },
                            {
                                from: 76,
                                to: 43,
                                color: "rgba(86, 254, 110, 0.1)"
                            },
                            {
                                from: 43,
                                to: 18,
                                color: "rgba(242, 201, 76, 0.1)"
                            },
                            {
                                from: 18,
                                to: 0,
                                color: "rgba(251, 255, 182, 0.1)"
                            },
                            {
                                from: 0,
                                to: -18,
                                color: "rgba(251, 255, 182, 0.1)"
                            },
                            {
                                from: -18,
                                to: -43,
                                color: "rgba(242, 201, 76, 0.1)"
                            },
                            {
                                from: -43,
                                to: -76,
                                color: "rgba(86, 254, 110, 0.1)"
                            },
                            {
                                from: -76,
                                to: -106,
                                color: "rgba(15, 186, 229, 0.1)"
                            },
                            {
                                from: -106,
                                to: -127,
                                color: "rgba(238, 95, 172, 0.1)"
                            },
                            {
                                from: -127,
                                to: -164,
                                color: "rgba(249, 100, 93, 0.1)"
                            }
                        ]
                    },
                    legend: {enabled: false},
                    plotOptions: {
                        series: {
                            enableMouseTracking: true,
                            animation: false,
                            lineWidth: 0,
                            marker: {
                                symbol: 'circle',
                                enabled: true,
                                radius: 1
                            },
                            tooltip: {
                                pointFormat: '<span style="color:{point.color}">●</span> {series.name}: <b>{point.y}</b> ms<br/>',
                                headerFormat: '<span style="font-size: 10px">{point.x}</span><br/>'
                            },
                            turboThreshold: data.hits.length,
                            states: {
                                hover: {lineWidthPlus: 0},
                                inactive: {enabled: false}
                            }
                        }
                    },
                    colors: ['#FBFFB6', '#F2C94C', '#56FE6E', '#0FBAE5', '#EE5FAC', '#F9645D'],
                    series: sortData(data.hits)
                });
            });
        }

        function loadChart(table_class, score_id, total_marv, total_perf, total_great, total_good, total_okay, total_miss) {

            // Fetch score data
            loadScatter(table_class, score_id);

            let chartJudgements = document.getElementsByClassName('chartScore_' + table_class + '_' + score_id)[0].getContext('2d');

            // Highcharts.stockChart({
            //     chart: {renderTo: sc, animation: false, backgroundColor: 'transparent'},
            //     rangeSelector: {enabled: false},
            //     navigator: {enabled: false},
            //     credits: {enabled: false},
            //     xAxis: {visible: false},
            //     yAxis: {visible: true, gridLineWidth: 0},
            //     scrollbar: {enabled: false},
            //     plotOptions: {
            //         series: {
            //             enableMouseTracking: false,
            //             animation: {duration: 0},
            //             lineWidth: 0,
            //             marker: {
            //                 symbol: 'circle',
            //                 enabled: true,
            //                 radius: 1
            //             },
            //             tooltip: {valueDecimals: 2},
            //             states: {
            //                 hover: {lineWidthPlus: 0}
            //             }
            //         }
            //     },
            //     colors: ['#FBFFB6', '#F2C94C', '#56FE6E', '#0FBAE5', '#EE5FAC', '#F9645D'],
            //     series: sortData(data.hits)
            // });
            new Chart(chartJudgements, {
                type: 'bar',
                data: {
                    labels: ['Marv', 'Perf', 'Great', 'Good', 'Okay', 'Miss'],
                    datasets: [{
                        label: '',
                        borderColor: 'rgb(255, 99, 132)',
                        data: [
                            total_marv,
                            total_perf,
                            total_great,
                            total_good,
                            total_okay,
                            total_miss,
                        ],
                        backgroundColor: [
                            '#FBFFB6',
                            '#F2C94C',
                            '#56FE6E',
                            '#0FBAE5',
                            '#EE5FAC',
                            '#F9645D'
                        ],
                    }],
                },
                options: {
                    layout: {
                        padding: {
                            left: 0,
                            right: 0,
                            top: 10,
                            bottom: 0
                        }
                    },
                    plugins: {
                        datalabels: {
                            display: true,
                            align: 'end',
                            anchor: 'end',
                            offset: '0',
                            color: [
                                '#FBFFB6',
                                '#F2C94C',
                                '#56FE6E',
                                '#0FBAE5',
                                '#EE5FAC',
                                '#F9645D'
                            ],
                            textShadowColor: 'black',
                            textShadowBlur: 4
                            // color: '#CACACA'
                        }
                    },
                    responsive: true,
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: false
                    },
                    scales: {
                        xAxes: [{
                            stacked: true,
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
    </script>
{% endblock %}